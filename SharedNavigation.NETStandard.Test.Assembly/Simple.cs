using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace SharedNavigation.NETStandard.Test.Assembly
{
    public class SimpleView : INavigationView<SimpleViewModel>
    {
        public bool IsPushAsyncCalled { get; set; }

        [Navigate(nameof(SimpleViewModel.PushCommand))]
        public async Task PushAsync(SimpleViewModel viewModel)
        {
            IsPushAsyncCalled = true;
            await Task.CompletedTask;
        }

        void INavigationView<SimpleViewModel>.RegisterNavigationByAutoGenerated(SimpleViewModel viewModel, INavigationAction defaultNavigationAction)
        {
        }

        public void RegisterNavigationByAutoGenerated(SimpleViewModel viewModel, INavigationAction defaultNavigationAction)
        {
        }
    }

    public class SimpleViewModel : INavigationViewModel
    {
        [InjectNavigation]
        public INavigationCommand<SimpleViewModel> PushCommand { get; set; } = new NavigationCommand<SimpleViewModel>();

        public void RestoreState(byte[] state)
        {
        }

        public byte[] SaveState()
        {
            return new byte[0];
        }
    }
}
